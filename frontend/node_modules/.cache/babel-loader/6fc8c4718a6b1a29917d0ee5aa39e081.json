{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Azapfy\\\\Downloads\\\\Estrello\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Azapfy\\\\Downloads\\\\Estrello\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Azapfy\\\\Downloads\\\\Estrello\\\\frontend\\\\src\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Board, { moveCard } from \"@lourenci/react-kanban\";\nimport api from \"./service\";\nimport \"./styles.css\";\n\nfunction deleteCard(_ref) {\n  var data = _ref.data;\n}\n\nfunction UncontrolledBoard(_ref2) {\n  var data = _ref2.data;\n  console.log(data);\n  return /*#__PURE__*/React.createElement(Board, {\n    allowRemoveLane: true,\n    allowRenameColumn: true,\n    allowRemoveCard: true,\n    onLaneRemove: console.log,\n    onCardRemove: function onCardRemove(card) {\n      return console.log(card);\n    },\n    onLaneRename: console.log,\n    initialBoard: data,\n    allowAddCard: {\n      on: \"top\"\n    },\n    onNewCardConfirm: (function (draftCard) {\n      return _objectSpread({\n        id: new Date().getTime()\n      }, draftCard);\n    }, AdicionaCard()),\n    onCardNew: console.log,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction App() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      broad = _useState2[0],\n      setBroad = _useState2[1];\n\n  useEffect(function () {\n    api.get(\"tasks\").then(function (response) {\n      var aux = {\n        columns: [{\n          id: 1,\n          title: \"Backlog\",\n          cards: response.data.filter(function (data) {\n            return data.statu === \"backlog\";\n          }).map(function (dado) {\n            return {\n              id: dado.id,\n              title: dado.titulo,\n              description: dado.descricao\n            };\n          })\n        }, {\n          id: 2,\n          title: \"To do\",\n          cards: response.data.filter(function (data) {\n            return data.statu === \"to-do\";\n          }).map(function (dado) {\n            return {\n              id: dado.id,\n              title: dado.titulo,\n              description: dado.descricao\n            };\n          })\n        }, {\n          id: 3,\n          title: \"Doing\",\n          cards: response.data.filter(function (data) {\n            return data.statu === \"doing\";\n          }).map(function (dado) {\n            return {\n              id: dado.id,\n              title: dado.titulo,\n              description: dado.descricao\n            };\n          })\n        }, {\n          id: 4,\n          title: \"Done\",\n          cards: response.data.filter(function (data) {\n            return data.statu === \"done\";\n          }).map(function (dado) {\n            return {\n              id: dado.id,\n              title: dado.titulo,\n              description: dado.descricao\n            };\n          })\n        }]\n      };\n      setBroad(aux);\n    }).catch(function (err) {\n      console.error(\"ops! ocorreu um erro\" + err);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Example of an uncontrolled board\"), broad.columns !== undefined ? /*#__PURE__*/React.createElement(UncontrolledBoard, {\n    data: broad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 38\n    }\n  }) : null);\n}\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["C:/Users/Azapfy/Downloads/Estrello/frontend/src/index.js"],"names":["React","useState","useEffect","ReactDOM","Board","moveCard","api","deleteCard","data","UncontrolledBoard","console","log","card","on","draftCard","id","Date","getTime","AdicionaCard","App","broad","setBroad","get","then","response","aux","columns","title","cards","filter","statu","map","dado","titulo","description","descricao","catch","err","error","undefined","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Board, { moveCard } from \"@lourenci/react-kanban\";\n\nimport api from \"./service\";\n\nimport \"./styles.css\";\n\nfunction deleteCard({ data }) {}\n\nfunction UncontrolledBoard({ data }) {\n  console.log(data);\n  return (\n    <Board\n      allowRemoveLane\n      allowRenameColumn\n      allowRemoveCard\n      onLaneRemove={console.log}\n      onCardRemove={(card) => console.log(card)}\n      onLaneRename={console.log}\n      initialBoard={data}\n      allowAddCard={{ on: \"top\" }}\n      onNewCardConfirm={\n        ((draftCard) => ({\n          id: new Date().getTime(),\n          ...draftCard,\n        }),\n        AdicionaCard())\n      }\n      onCardNew={console.log}\n    />\n  );\n}\n\nfunction App() {\n  const [broad, setBroad] = useState({});\n\n  useEffect(() => {\n    api\n      .get(\"tasks\")\n      .then((response) => {\n        let aux = {\n          columns: [\n            {\n              id: 1,\n              title: \"Backlog\",\n              cards: response.data\n                .filter((data) => data.statu === \"backlog\")\n                .map((dado) => {\n                  return {\n                    id: dado.id,\n                    title: dado.titulo,\n                    description: dado.descricao,\n                  };\n                }),\n            },\n            {\n              id: 2,\n              title: \"To do\",\n              cards: response.data\n                .filter((data) => data.statu === \"to-do\")\n                .map((dado) => {\n                  return {\n                    id: dado.id,\n                    title: dado.titulo,\n                    description: dado.descricao,\n                  };\n                }),\n            },\n            {\n              id: 3,\n              title: \"Doing\",\n              cards: response.data\n                .filter((data) => data.statu === \"doing\")\n                .map((dado) => {\n                  return {\n                    id: dado.id,\n                    title: dado.titulo,\n                    description: dado.descricao,\n                  };\n                }),\n            },\n            {\n              id: 4,\n              title: \"Done\",\n              cards: response.data\n                .filter((data) => data.statu === \"done\")\n                .map((dado) => {\n                  return {\n                    id: dado.id,\n                    title: dado.titulo,\n                    description: dado.descricao,\n                  };\n                }),\n            },\n          ],\n        };\n        setBroad(aux);\n      })\n      .catch((err) => {\n        console.error(\"ops! ocorreu um erro\" + err);\n      });\n  }, []);\n  return (\n    <>\n      <h4>Example of an uncontrolled board</h4>\n      {broad.columns !== undefined ? <UncontrolledBoard data={broad} /> : null}\n    </>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}