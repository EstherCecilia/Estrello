{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Azapfy\\\\Downloads\\\\react-kanban-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Azapfy\\\\Downloads\\\\react-kanban-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Azapfy\\\\Downloads\\\\react-kanban-demo\\\\src\\\\index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Board, { moveCard } from \"@lourenci/react-kanban\";\nimport \"./styles.css\";\nvar board = {\n  columns: [{\n    id: 1,\n    title: \"Backlog\",\n    cards: [{\n      id: 1,\n      title: \"Card title 1\",\n      description: \"Card content\"\n    }, {\n      id: 2,\n      title: \"Card title 2\",\n      description: \"Card content\"\n    }, {\n      id: 3,\n      title: \"Card title 3\",\n      description: \"Card content\"\n    }]\n  }, {\n    id: 2,\n    title: \"Doing\",\n    cards: [{\n      id: 9,\n      title: \"Card title 9\",\n      description: \"Card content\"\n    }]\n  }, {\n    id: 3,\n    title: \"Q&A\",\n    cards: [{\n      id: 10,\n      title: \"Card title 10\",\n      description: \"Card content\"\n    }, {\n      id: 11,\n      title: \"Card title 11\",\n      description: \"Card content\"\n    }]\n  }, {\n    id: 4,\n    title: \"Production\",\n    cards: [{\n      id: 12,\n      title: \"Card title 12\",\n      description: \"Card content\"\n    }, {\n      id: 13,\n      title: \"Card title 13\",\n      description: \"Card content\"\n    }]\n  }]\n};\n\nfunction ControlledBoard() {\n  // You need to control the state yourself.\n  var _useState = useState(board),\n      _useState2 = _slicedToArray(_useState, 2),\n      controlledBoard = _useState2[0],\n      setBoard = _useState2[1];\n\n  function handleCardMove(_card, source, destination) {\n    var updatedBoard = moveCard(controlledBoard, source, destination);\n    setBoard(updatedBoard);\n  }\n\n  return /*#__PURE__*/React.createElement(Board, {\n    onCardDragEnd: handleCardMove,\n    disableColumnDrag: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, controlledBoard);\n}\n\nfunction UncontrolledBoard() {\n  return /*#__PURE__*/React.createElement(Board, {\n    allowRemoveLane: true,\n    allowRenameColumn: true,\n    allowRemoveCard: true,\n    onLaneRemove: console.log,\n    onCardRemove: console.log,\n    onLaneRename: console.log,\n    initialBoard: board,\n    allowAddCard: {\n      on: \"top\"\n    },\n    onNewCardConfirm: function onNewCardConfirm(draftCard) {\n      return _objectSpread({\n        id: new Date().getTime()\n      }, draftCard);\n    },\n    onCardNew: console.log,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Example of an uncontrolled board\"), /*#__PURE__*/React.createElement(UncontrolledBoard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"Example of a controlled board\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"Just the card moving is implemented in this demo.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"In this kind of board, you can do whatever you want. We just mirror your board state.\"), /*#__PURE__*/React.createElement(ControlledBoard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["C:/Users/Azapfy/Downloads/react-kanban-demo/src/index.js"],"names":["React","useState","ReactDOM","Board","moveCard","board","columns","id","title","cards","description","ControlledBoard","controlledBoard","setBoard","handleCardMove","_card","source","destination","updatedBoard","UncontrolledBoard","console","log","on","draftCard","Date","getTime","App","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Board, { moveCard } from \"@lourenci/react-kanban\";\n\nimport \"./styles.css\";\n\nconst board = {\n  columns: [\n    {\n      id: 1,\n      title: \"Backlog\",\n      cards: [\n        {\n          id: 1,\n          title: \"Card title 1\",\n          description: \"Card content\"\n        },\n        {\n          id: 2,\n          title: \"Card title 2\",\n          description: \"Card content\"\n        },\n        {\n          id: 3,\n          title: \"Card title 3\",\n          description: \"Card content\"\n        }\n      ]\n    },\n    {\n      id: 2,\n      title: \"Doing\",\n      cards: [\n        {\n          id: 9,\n          title: \"Card title 9\",\n          description: \"Card content\"\n        }\n      ]\n    },\n    {\n      id: 3,\n      title: \"Q&A\",\n      cards: [\n        {\n          id: 10,\n          title: \"Card title 10\",\n          description: \"Card content\"\n        },\n        {\n          id: 11,\n          title: \"Card title 11\",\n          description: \"Card content\"\n        }\n      ]\n    },\n    {\n      id: 4,\n      title: \"Production\",\n      cards: [\n        {\n          id: 12,\n          title: \"Card title 12\",\n          description: \"Card content\"\n        },\n        {\n          id: 13,\n          title: \"Card title 13\",\n          description: \"Card content\"\n        }\n      ]\n    }\n  ]\n};\n\nfunction ControlledBoard() {\n  // You need to control the state yourself.\n  const [controlledBoard, setBoard] = useState(board);\n\n  function handleCardMove(_card, source, destination) {\n    const updatedBoard = moveCard(controlledBoard, source, destination);\n    setBoard(updatedBoard);\n  }\n\n  return (\n    <Board onCardDragEnd={handleCardMove} disableColumnDrag>\n      {controlledBoard}\n    </Board>\n  );\n}\n\nfunction UncontrolledBoard() {\n  return (\n    <Board\n      allowRemoveLane\n      allowRenameColumn\n      allowRemoveCard\n      onLaneRemove={console.log}\n      onCardRemove={console.log}\n      onLaneRename={console.log}\n      initialBoard={board}\n      allowAddCard={{ on: \"top\" }}\n      onNewCardConfirm={draftCard => ({\n        id: new Date().getTime(),\n        ...draftCard\n      })}\n      onCardNew={console.log}\n    />\n  );\n}\n\nfunction App() {\n  return (\n    <>\n      <h4>Example of an uncontrolled board</h4>\n      <UncontrolledBoard />\n      <h4>Example of a controlled board</h4>\n      <p>Just the card moving is implemented in this demo.</p>\n      <p>\n        In this kind of board, you can do whatever you want. We just mirror your\n        board state.\n      </p>\n      <ControlledBoard />\n    </>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}